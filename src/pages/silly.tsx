import { useState } from "react";
import { motion } from "framer-motion";
import { Typography } from "@/components/ui/typography";
import { Button } from "@/components/ui/button";
import { Baby, Crown, Star } from "lucide-react";

export function Silly() {
  const [bounceCount, setBounceCount] = useState(0);
  const [isSpinning, setIsSpinning] = useState(false);

  const jokes = [
    "–ü–æ—á–µ–º—É –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç—ã –Ω–µ –ª—é–±—è—Ç –ø—Ä–∏—Ä–æ–¥—É? –¢–∞–º —Å–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –±–∞–≥–æ–≤! üêõ",
    "–ö–∞–∫ –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è –≥—Ä—É–ø–ø–∞ –∏–∑ 8 —Ö–æ–±–±–∏—Ç–æ–≤? –•–æ–±–±–∞–π—Ç! üßô‚Äç‚ôÇÔ∏è",
    "–ß—Ç–æ —Å–∫–∞–∑–∞–ª –æ–¥–∏–Ω —É—Ç—é–≥ –¥—Ä—É–≥–æ–º—É? –î–∞–≤–∞–π –ø–æ–≥–ª–∞–¥–∏–º! üëï",
  ];

  return (
    <div className="space-y-8">
      <motion.div
        initial={{ opacity: 0, x: -100 }}
        animate={{ opacity: 1, x: 0 }}
        transition={{ duration: 0.5 }}
        className="text-center"
      >
        <Typography.H1>–°—Ç—Ä–∞–Ω–∏—Ü–∞ –≥–ª—É–ø–æ—Å—Ç–µ–π ü§™</Typography.H1>
        <Typography.Lead>
          –ó–¥–µ—Å—å –∂–∏–≤—É—Ç –æ–±—ã—á–Ω—ã–µ –≥–ª—É–ø–æ—Å—Ç–∏. –ù–∏—á–µ–≥–æ –æ—Å–æ–±–µ–Ω–Ω–æ–≥–æ!
        </Typography.Lead>
      </motion.div>

      <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
        <motion.div
          className="p-6 border rounded-lg bg-card"
          whileHover={{ scale: 1.05 }}
        >
          <Typography.H3 className="flex items-center gap-2 mb-4">
            <Baby className="text-primary" />
            –°—á—ë—Ç—á–∏–∫ –ø—Ä—ã–∂–∫–æ–≤
          </Typography.H3>
          <div className="text-center">
            <motion.div
              animate={{ y: bounceCount > 0 ? [0, -20, 0] : 0 }}
              transition={{ duration: 0.5 }}
            >
              <Typography.H2>ü¶ò {bounceCount}</Typography.H2>
            </motion.div>
            <Button
              className="mt-4"
              onClick={() => setBounceCount((prev) => prev + 1)}
            >
              –ü—Ä—ã–≥–Ω—É—Ç—å!
            </Button>
          </div>
        </motion.div>

        <motion.div
          className="p-6 border rounded-lg bg-card"
          whileHover={{ scale: 1.05 }}
        >
          <Typography.H3 className="flex items-center gap-2 mb-4">
            <Crown className="text-primary" />
            –°–ª—É—á–∞–π–Ω–∞—è —à—É—Ç–∫–∞
          </Typography.H3>
          <Typography.P className="text-center mb-4">
            {jokes[Math.floor(Math.random() * jokes.length)]}
          </Typography.P>
          <div className="text-center">
            <Button
              variant="outline"
              onClick={() => setIsSpinning(true)}
              className="group"
            >
              <motion.div
                animate={{ rotate: isSpinning ? 360 : 0 }}
                onAnimationComplete={() => setIsSpinning(false)}
                transition={{ duration: 1 }}
              >
                <Star className="mr-2 h-4 w-4 text-primary group-hover:text-primary" />
              </motion.div>
              –ï—â—ë —à—É—Ç–∫—É!
            </Button>
          </div>
        </motion.div>
      </div>

      <motion.div
        className="text-center"
        initial={{ opacity: 0 }}
        animate={{ opacity: 1 }}
        transition={{ delay: 1 }}
      >
        <Typography.Muted>
          –ï—Å–ª–∏ –≤–∞–º –ø–æ–∫–∞–∑–∞–ª–æ—Å—å —ç—Ç–æ –≥–ª—É–ø—ã–º, —Ç–æ –≤—ã –µ—â—ë –Ω–µ –≤–∏–¥–µ–ª–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—É –û–ß–ï–ù–¨
          –≥–ª—É–ø–æ—Å—Ç–µ–π! üé™
        </Typography.Muted>
      </motion.div>
    </div>
  );
}